{"version":3,"sources":["Fetcher.tsx","Coins.tsx","route/Chart.tsx","route/Price.tsx","coin.tsx","Router.tsx","App.tsx","index.tsx","Themes.tsx"],"names":["CoinFetcher","a","fetch","then","response","json","CoinId","CoinOHLC","end","Math","floor","Date","now","start","Title","styled","h1","props","theme","fontColor","Container","div","Header","CoinList","ul","CoinItem","li","bgColor","Coins","useQuery","isLoading","data","slice","map","coin","to","pathname","id","state","name","Chart","OHLC_DATA","data123","x","time_close","substr","y","open","toFixed","high","low","close","series","type","height","options","title","text","yaxis","tooltip","enabled","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","custom","fillSeriesColor","style","fontSize","onDatasetHover","highlightDataSeries","marker","show","items","display","formatter","fixed","position","offsetX","offsetY","grid","Price","width","day","chart","stacked","zoom","autoScaleYaxis","toolbar","autoSelected","dataLabels","markers","size","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","xaxis","categories","val","ColoredItem","color","Coin","useParams","useLocation","useRouteMatch","path","CoinInfo","infoLoading","infoData","CoinPrice","priceLoading","AllLoading","useState","isDark","setDark","margin","gridTemplateColumns","gridTemplateRows","justifyContent","marginBottom","rank","gridColumnStart","gridColumnEnd","description","onClick","development_status","marginTop","CoinRouter","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.3c598f8a.chunk.js","sourcesContent":["export async function CoinFetcher() {\r\n  return fetch(\"https://api.coinpaprika.com/v1/coins\").then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport async function CoinInfo(CoinId: string) {\r\n  return fetch(`https://api.coinpaprika.com/v1/coins/${CoinId}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport async function CoinPrice(CoinId: string) {\r\n  return fetch(`https://api.coinpaprika.com/v1/tickers/${CoinId}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport async function CoinOHLC(CoinId: string) {\r\n  const end = Math.floor(Date.now() / 1000);\r\n  const start = end - 7 * 24 * 60 * 60;\r\n  return fetch(\r\n    `https://api.coinpaprika.com/v1/coins/${CoinId}/ohlcv/historical?start=${start}&end=${end}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { CoinFetcher } from \"./Fetcher\";\r\n\r\nexport const Title = styled.h1`\r\n  color: ${(props) => props.theme.fontColor};\r\n  margin-bottom: 20px;\r\n  font-size: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 50%;\r\n  margin: 0 auto;\r\n  color: ${(props) => props.theme.fontColor};\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Header = styled.div``;\r\n\r\nconst CoinList = styled.ul`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinItem = styled.li`\r\n  background-color: ${(props) => props.theme.fontColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  width: 300px;\r\n  margin-bottom: 10px;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<CoinInterface[]>(\r\n    \"allCoins\",\r\n    CoinFetcher\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>Coins</Title>\r\n      </Header>\r\n      <CoinList>\r\n        {isLoading\r\n          ? isLoading\r\n          : data?.slice(0, 100).map((coin) => {\r\n              return (\r\n                <CoinItem key={coin.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/${coin.id}`,\r\n                      state: { name: coin.name },\r\n                    }}\r\n                  >\r\n                    {coin.name}\r\n                  </Link>\r\n                </CoinItem>\r\n              );\r\n            })}\r\n      </CoinList>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { useQuery } from \"react-query\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { CoinOHLC } from \"../Fetcher\";\r\n\r\nexport function Chart({ CoinId }: { CoinId: string }) {\r\n  const { isLoading, data: OHLC_DATA } = useQuery<\r\n    {\r\n      close: number;\r\n      high: number;\r\n      low: number;\r\n      open: number;\r\n      market_cap: number;\r\n      time_close: string;\r\n      time_open: string;\r\n      volume: number;\r\n    }[]\r\n  >([\"COIN_OHLC_CHART\", CoinId], () => CoinOHLC(CoinId));\r\n\r\n  const data123 = OHLC_DATA?.map((data) => {\r\n    return {\r\n      x: data.time_close.substr(0, 10),\r\n      y: [\r\n        data.open.toFixed(3),\r\n        data.high.toFixed(3),\r\n        data.low.toFixed(3),\r\n        data.close.toFixed(3),\r\n      ],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"loading\"\r\n      ) : (\r\n        <ApexChart\r\n          series={[\r\n            {\r\n              data: data123,\r\n            },\r\n          ]}\r\n          type=\"candlestick\"\r\n          height=\"350\"\r\n          options={{\r\n            title: {\r\n              text: `${CoinId} chart`,\r\n            },\r\n\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            tooltip: {\r\n              enabled: true,\r\n              enabledOnSeries: undefined,\r\n              shared: true,\r\n              followCursor: false,\r\n              intersect: false,\r\n              inverseOrder: false,\r\n              custom: undefined,\r\n              fillSeriesColor: true,\r\n              theme: \"light\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n              },\r\n              onDatasetHover: {\r\n                highlightDataSeries: false,\r\n              },\r\n              marker: {\r\n                show: true,\r\n              },\r\n              items: {\r\n                display: \"flex\",\r\n              },\r\n              y: [\r\n                {\r\n                  formatter: function (y) {\r\n                    if (typeof y !== \"undefined\") {\r\n                      return y + \"hey\";\r\n                    }\r\n                    return y;\r\n                  },\r\n                },\r\n              ],\r\n\r\n              fixed: {\r\n                enabled: false,\r\n                position: \"topRight\",\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n              },\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n          }}\r\n        ></ApexChart>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { CoinOHLC } from \"../Fetcher\";\r\n\r\nexport function Price({ CoinId }: { CoinId: string }) {\r\n  const { isLoading, data: OHLC_DATA } = useQuery<\r\n    {\r\n      close: number;\r\n      high: number;\r\n      low: number;\r\n      market_cap: number;\r\n      open: number;\r\n      time_close: string;\r\n      time_open: string;\r\n      volume: number;\r\n    }[]\r\n  >([\"COIN_OHLC\", CoinId], () => CoinOHLC(CoinId));\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        \"Loading..\"\r\n      ) : (\r\n        <>\r\n          <ApexChart\r\n            width=\"100%\"\r\n            series={[\r\n              {\r\n                name: \"close\",\r\n                data: OHLC_DATA?.map((day) => Math.floor(day.close)),\r\n              },\r\n              {\r\n                name: \"open\",\r\n                data: OHLC_DATA?.map((day) => Math.floor(day.open)),\r\n              },\r\n            ]}\r\n            type=\"area\"\r\n            options={{\r\n              grid: {\r\n                show: false,\r\n              },\r\n              chart: {\r\n                stacked: false,\r\n                height: 350,\r\n                zoom: {\r\n                  type: \"x\",\r\n                  enabled: true,\r\n                  autoScaleYaxis: true,\r\n                },\r\n                toolbar: {\r\n                  autoSelected: \"zoom\",\r\n                },\r\n              },\r\n              dataLabels: {\r\n                enabled: false,\r\n              },\r\n              markers: {\r\n                size: 0,\r\n              },\r\n              title: {\r\n                text: `${CoinId} last 7 days`,\r\n                align: \"left\",\r\n              },\r\n              fill: {\r\n                type: \"gradient\",\r\n                gradient: {\r\n                  shadeIntensity: 1,\r\n                  inverseColors: false,\r\n                  opacityFrom: 0.5,\r\n                  opacityTo: 0,\r\n                  stops: [0, 90, 100],\r\n                },\r\n              },\r\n\r\n              xaxis: {\r\n                categories: OHLC_DATA?.map((day) =>\r\n                  day.time_close.substr(0, 10)\r\n                ),\r\n              },\r\n              tooltip: {\r\n                shared: true,\r\n                y: {\r\n                  formatter: function (val) {\r\n                    return (val / 1000000).toFixed(0);\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          ></ApexChart>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Container, Header, Title } from \"./Coins\";\r\nimport { Chart } from \"./route/Chart\";\r\nimport { Price } from \"./route/Price\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { CoinInfo, CoinPrice } from \"./Fetcher\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Paramtype {\r\n  CoinId: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst ColoredItem = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap\");\r\n  background-color: ${(props) => props.color};\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  display: flex;\r\n  &:hover {\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n  }\r\n  font-family: \"Open Sans\", sans-serif;\r\n`;\r\n\r\nfunction Coin() {\r\n  const { CoinId } = useParams<Paramtype>();\r\n  // 얘네 둘이 typesciprt 쓰는 형식이 조금 헷갈리는데...시간날때 다시 시험.\r\n  const { state } = useLocation<{ name: string }>();\r\n  // 하나 거슬리는것은 여기. 지금은 params을 가져다 썼는데, 왜냐하면 state를 쓰니까\r\n  // switch되는 컴포넌트에서 state를 못읽어왓기 때문. 수업에서는 어떻게 했는지?\r\n  const isChart = useRouteMatch({ path: `/${CoinId}/Chart` });\r\n  const isPrice = useRouteMatch({ path: `/${CoinId}/Price` });\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"CoinInfo\", CoinId],\r\n    () => CoinInfo(CoinId)\r\n  );\r\n\r\n  const { isLoading: priceLoading, data: priceData } = useQuery<PriceData>(\r\n    [\"PriceInfo\", CoinId],\r\n    () => CoinPrice(CoinId)\r\n  );\r\n\r\n  const AllLoading = infoLoading || priceLoading;\r\n\r\n  const [isDark, setDark] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title> {state.name ? state.name : CoinId}</Title>\r\n      </Header>\r\n      {AllLoading ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <>\r\n          <div\r\n            style={{\r\n              margin: \"0 auto\",\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(3,30%)\",\r\n              gridTemplateRows: \"repeat(auto-fill,minmax(100px, auto))\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            <ColoredItem color={\"#1abc9c\"}>{infoData?.name}</ColoredItem>\r\n            <ColoredItem color={\"#9b59b6\"}>{infoData?.type}</ColoredItem>\r\n            <ColoredItem color={\"#2980b9\"}>rank : {infoData?.rank}</ColoredItem>\r\n            <ColoredItem\r\n              color={\"#d35400\"}\r\n              style={{\r\n                gridColumnStart: 1,\r\n                gridColumnEnd: 4,\r\n                fontSize: \"0.9rem\",\r\n              }}\r\n            >\r\n              {infoData?.description}\r\n            </ColoredItem>\r\n            <ColoredItem\r\n              color={isDark ? \"#ecf0f1\" : \"#34495e\"}\r\n              onClick={() => setDark(!isDark)}\r\n            >\r\n              {isDark ? \"light mode\" : \"dark mode\"}\r\n            </ColoredItem>\r\n            <ColoredItem\r\n              color={\"#95a5a6\"}\r\n              style={{ gridColumnStart: 2, gridColumnEnd: 4 }}\r\n            >\r\n              development_status: {infoData?.development_status}\r\n            </ColoredItem>\r\n            <Link to={`/`}>\r\n              <ColoredItem color={\"#3498db\"} style={{ marginTop: \"10px\" }}>\r\n                Home\r\n              </ColoredItem>\r\n            </Link>\r\n            <Link to={`/${CoinId}/Chart`}>\r\n              <ColoredItem color={\"#1abc9c\"} style={{ marginTop: \"10px\" }}>\r\n                show Chart\r\n              </ColoredItem>\r\n            </Link>\r\n            <Link to={`/${CoinId}/Price`}>\r\n              <ColoredItem color={\"#8e44ad\"} style={{ marginTop: \"10px\" }}>\r\n                show Price\r\n              </ColoredItem>\r\n            </Link>\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path={`/${CoinId}/Chart`}>\r\n              <Chart CoinId={CoinId}></Chart>\r\n            </Route>\r\n            <Route path={`/${CoinId}/Price`}>\r\n              <Price CoinId={CoinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./coin\";\r\nimport Coins from \"./Coins\";\r\n\r\nfunction CoinRouter() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/:CoinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default CoinRouter;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport CoinRouter from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\nbody {\n  background-color: ${(props) => props.theme.bgColor};\n  padding: 10px;\n  font-family: 'Source Sans Pro','Open Sans', sans-serif; \n\n}\na {\n  color: inherit;\n  text-decoration: none;\n  display: block;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <CoinRouter />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./Themes\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"black\",\r\n  fontColor: \"white\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"white\",\r\n  fontColor: \"black\",\r\n};\r\n"],"sourceRoot":""}